#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# -----------------------------------------------------------------------
# We don't support docker compose for production environments.
# If you choose to use this type of deployment make sure to
# create you own docker environment file (docker/.env) with your own
# unique random secure passwords and SECRET_KEY.
# -----------------------------------------------------------------------
x-superset-image: &superset-image apache/superset:${TAG:-latest}
x-superset-depends-on: &superset-depends-on
  - db
  - redis
x-superset-volumes:
  &superset-volumes # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./docker:/app/docker
  - superset_v4_home:/app/superset_home

services:
  redis:
    image: redis:7
    container_name: superset_v4_cache
    restart: unless-stopped
    volumes:
      - superset_v4_cache:/data

  db:
    env_file: docker/.env-prod
    image: postgres:15
    container_name: superset_v4_db
    restart: unless-stopped
    volumes:
      - superset_v4_db_home:/var/lib/postgresql/data
      - ./docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  superset:
    env_file: docker/.env-prod
    image: *superset-image
    container_name: superset_v4_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    # We're using Nginx to control access, so don't expose ports directly
    #    ports:
    #    - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    networks:
      default:
        ipv4_address: 172.20.1.255

  superset-init:
    image: *superset-image
    container_name: superset_v4_init
    command: ["/app/docker/docker-init.sh"]
    env_file: docker/.env-prod
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true

  superset-worker:
    image: *superset-image
    container_name: superset_v4_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env-prod
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME",
        ]

  superset-worker-beat:
    image: *superset-image
    container_name: superset_v4_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: docker/.env-prod
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true

volumes:
  superset_v4_home:
    external: true
  superset_v4_db_home:
    external: true
  superset_v4_cache:
    external: false

networks:
  default:
    external:
      name: isaac
